"""
Django settings for Disaster project (Render-ready).

Generated by 'django-admin startproject' using Django 5.2.5.
"""

from pathlib import Path
import os

# Build paths inside the project
BASE_DIR = Path(__file__).resolve().parent.parent

# -----------------------
# Environment variables
# -----------------------
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "fallback-secret-key")
DEBUG = os.environ.get("DEBUG", "False") == "True"
ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")

# Add Render domain to allowed hosts
if not DEBUG:
    ALLOWED_HOSTS.extend([
        '.onrender.com',
        '.render.com'
    ])

# -----------------------
# Application definition
# -----------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'frontend',
    'backend',
    'mlmodel',
    "corsheaders",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # added for static files
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Disaster.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Disaster.wsgi.application'

# -----------------------
# Database
# -----------------------
# Use SQLite for both development and production
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# -----------------------
# Password validation
# -----------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# -----------------------
# Internationalization
# -----------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# -----------------------
# Static files
# -----------------------
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# -----------------------
# Media files
# -----------------------
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# -----------------------
# Auth & login redirects
# -----------------------
AUTH_USER_MODEL = "backend.CustomUser"
LOGIN_REDIRECT_URL = '/view_report/'
LOGOUT_REDIRECT_URL = 'home'

# -----------------------
# CORS
# -----------------------
CORS_ALLOW_ALL_ORIGINS = DEBUG  # Only allow all origins in development
if not DEBUG:
    CORS_ALLOWED_ORIGINS = [
        "https://disaster-management.onrender.com",
        "https://*.onrender.com",
    ]

# -----------------------
# App constants
# -----------------------
INDIA_BOUNDS = {
    "MIN_LAT": 6.0, "MAX_LAT": 37.5,
    "MIN_LNG": 68.0, "MAX_LNG": 97.5,
}

# Emergency Reporting System Configuration for India
TWILIO_ACCOUNT_SID = os.environ.get('TWILIO_ACCOUNT_SID', 'your_twilio_account_sid_here')
TWILIO_AUTH_TOKEN = os.environ.get('TWILIO_AUTH_TOKEN', 'your_twilio_auth_token_here')
TWILIO_PHONE_NUMBER = os.environ.get('TWILIO_PHONE_NUMBER', '+91-XXXX-XXXXXX')  # Indian number

# SMS Gateway Configuration (alternative to Twilio)
SMS_GATEWAY_URL = os.environ.get('SMS_GATEWAY_URL', 'https://api.smsgateway.com/send')
SMS_GATEWAY_API_KEY = os.environ.get('SMS_GATEWAY_API_KEY', 'your_sms_gateway_api_key_here')

# Base URL for webhooks (Render deployment)
BASE_URL = os.environ.get('BASE_URL', 'https://disaster-management-z940.onrender.com')

# India-specific settings
INDIA_EMERGENCY_NUMBER = '+91-XXXX-XXXXXX'  # Your Twilio Indian number
INDIA_SMS_SHORT_CODE = 'XXXX'  # Optional: Get SMS short code for India
